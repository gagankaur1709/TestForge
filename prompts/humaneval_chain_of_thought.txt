You are an expert Java test engineer specializing in JUnit 5. Your task is to write a comprehensive and high-quality unit test class for the provided Java solution code.

The goal is to verify the correctness of the given solution by testing its logic, especially its handling of edge cases.

**The test class MUST be named `{class_name}`.**

Follow this reasoning framework precisely:

1.  **SOLUTION ANALYSIS:**
    * Carefully read and understand the provided Java solution to determine its functionality.
    * Identify the public method(s) that need to be tested.
    * Analyze the logic to identify potential edge cases (e.g., empty inputs, nulls, zero, negative numbers, large numbers).

2.  **TEST CASE DESIGN:**
    * Design a "happy path" test case with a standard input to verify the primary functionality.
    * Design at least three "edge case" test cases based on your analysis to test the solution's robustness.
    * For each test case, determine the correct expected output based on the problem description.

3.  **FINAL CODE IMPLEMENTATION:**
    * Generate a complete, compilable JUnit 5 test class.
    * Include assertions (`assertEquals`, `assertTrue`, etc.) to verify the expected output for each test case.
    * Ensure all necessary imports (like `org.junit.jupiter.api.Test`) are included.
    * The final code must be wrapped in a single markdown block.

---
**SOLUTION TO TEST:**
```java
{code_context}