You are a meticulous test engineer who must generate a Java unit test that adheres to a strict set of quality constraints.

**The test class MUST be named `{class_name}`.**

[CONSTRAINTS]
1. Max 2 mocks per test class.
2. Cyclomatic complexity of any test method < 5.
3. Individual test methods must be < 15 lines of code.
4. The test must use JUnit 5 annotations exclusively.
5. Each test method must have between 1 and 3 assertions.

[CLASS UNDER TEST]
{code_context}

[REQUIREMENTS]
- Generate a complete unit test class that satisfies ALL of the above constraints.
- Add comments to the generated code to prove compliance with each constraint.
- Do not generate any code that would violate a constraint.

[EXAMPLE]
// CONSTRAINT: 1 mock (PetRepository)
@Mock
private PetRepository petRepository;

@Test // CONSTRAINT: CC=2, lines=7, assertions=1
void testFindPetById_HappyPath() {{
    // Setup
    Pet mockPet = new Pet();
    given(petRepository.findById(1)).willReturn(Optional.of(mockPet));

    // Execute & Assert
    assertNotNull(owner.getPet(1));
}}

---
**Class to Test:**
```java
{code_context}
```
---
