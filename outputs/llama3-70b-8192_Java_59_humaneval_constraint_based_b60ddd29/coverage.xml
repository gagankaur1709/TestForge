<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="JaCoCo Coverage Report"><sessioninfo id="Gagandeeps-MacBook-Air.local-c1ca01c" start="1755085518445" dump="1755085518874"/><package name=""><class name="GeneratedTest_llama3_70b_8192_Java_59_humaneval_constraint_based_b60ddd29" sourcefilename="GeneratedTest_llama3_70b_8192_Java_59_humaneval_constraint_based_b60ddd29.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testLargestPrimeFactorComposite" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testLargestPrimeFactorPowerOfTwo" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testLargestPrimeFactorSmallComposite" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testLargestPrimeFactorLargeComposite" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Solution" sourcefilename="GeneratedTest_llama3_70b_8192_Java_59_humaneval_constraint_based_b60ddd29.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="largestPrimeFactor" desc="(I)I" line="37"><counter type="INSTRUCTION" missed="1" covered="43"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="46"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GeneratedTest_llama3_70b_8192_Java_59_humaneval_constraint_based_b60ddd29.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="2"/><line nr="40" mi="1" ci="6" mb="1" cb="1"/><line nr="41" mi="0" ci="9" mb="0" cb="2"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="2"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="89"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="1" covered="89"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="1" covered="89"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></report>